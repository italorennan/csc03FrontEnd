{"ast":null,"code":"var _jsxFileName = \"/home/italorennan/csc03FrontEnd/src/sections/Local/Statistics.js\";\nimport React, { useState } from 'react';\nimport { Section, Text, TextSection } from '../../pages/Local/styles';\nimport { XYPlot, LineSeries } from 'react-vis';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDateTimePicker } from '@material-ui/pickers';\n\nfunction Statistics() {\n  const [state, setState] = useState({\n    period: {\n      minDate: new Date(Date.now()),\n      maxDate: new Date(Date.now())\n    }\n  });\n  const data = [{\n    x: 0,\n    y: 8\n  }, {\n    x: 1,\n    y: 5\n  }, {\n    x: 2,\n    y: 4\n  }, {\n    x: 3,\n    y: 9\n  }, {\n    x: 4,\n    y: 1\n  }, {\n    x: 5,\n    y: 7\n  }, {\n    x: 6,\n    y: 6\n  }, {\n    x: 7,\n    y: 3\n  }, {\n    x: 8,\n    y: 2\n  }, {\n    x: 9,\n    y: 5\n  }];\n\n  const handleMinDate = date => {\n    setState({\n      period: {\n        minDate: date\n      }\n    });\n  };\n\n  const handleMaxDate = date => {\n    setState({\n      period: {\n        maxDate: date\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, \"Selecionar per\\xEDodo de visualiza\\xE7\\xE3o:\")), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDateTimePicker, {\n    variant: \"inline\",\n    ampm: false,\n    label: \"Insira data e hora para limite inferior\",\n    value: state.period.minDate,\n    format: \"dd/MM/yyyy HH:mm\",\n    onChange: handleMinDate,\n    disableFuture: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(KeyboardDateTimePicker, {\n    variant: \"inline\",\n    ampm: false,\n    label: \"Insira data e hora para limite superior\",\n    value: state.period.maxDate,\n    format: \"dd/MM/yyyy HH:mm\",\n    onChange: handleMaxDate,\n    minDate: state.period.minDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(XYPlot, {\n    width: 300,\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LineSeries, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })), console.log(state));\n}\n\nexport default Statistics;","map":{"version":3,"sources":["/home/italorennan/csc03FrontEnd/src/sections/Local/Statistics.js"],"names":["React","useState","Section","Text","TextSection","XYPlot","LineSeries","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDateTimePicker","Statistics","state","setState","period","minDate","Date","now","maxDate","data","x","y","handleMinDate","date","handleMaxDate","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Section, Text, TextSection } from '../../pages/Local/styles';\nimport { XYPlot, LineSeries } from 'react-vis';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDateTimePicker } from '@material-ui/pickers';\n\nfunction Statistics() {\n    const [state, setState] = useState({period: {minDate: new Date(Date.now()),\n                                                 maxDate: new Date(Date.now())}});\n\n    const data = [\n        {x: 0, y: 8},\n        {x: 1, y: 5},\n        {x: 2, y: 4},\n        {x: 3, y: 9},\n        {x: 4, y: 1},\n        {x: 5, y: 7},\n        {x: 6, y: 6},\n        {x: 7, y: 3},\n        {x: 8, y: 2},\n        {x: 9, y: 5}\n    ];\n\n    const handleMinDate = (date: Date | null) => {\n        setState({period: {minDate: date}});\n    }\n\n    const handleMaxDate = (date: Date | null) => {\n        setState({period: {maxDate: date}});\n    }\n\n    return (\n        <>\n        <Text><span>Selecionar período de visualização:</span></Text>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDateTimePicker \n                variant=\"inline\" ampm={false}\n                label=\"Insira data e hora para limite inferior\"\n                value={state.period.minDate} format=\"dd/MM/yyyy HH:mm\"\n                onChange={handleMinDate} disableFuture\n            />\n            <KeyboardDateTimePicker \n                variant=\"inline\" ampm={false}\n                label=\"Insira data e hora para limite superior\"\n                value={state.period.maxDate} format=\"dd/MM/yyyy HH:mm\"\n                onChange={handleMaxDate} minDate={state.period.minDate}\n            />\n        </MuiPickersUtilsProvider>\n\n        <XYPlot width={300} height={300}>\n            <LineSeries data={data} />\n        </XYPlot>\n        {console.log(state)}\n        </>\n    );\n}\n\nexport default Statistics;"]},"metadata":{},"sourceType":"module"}